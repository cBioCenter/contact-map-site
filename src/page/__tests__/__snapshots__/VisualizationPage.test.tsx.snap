// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VisualizationPage Should match existing snapshot when given a PDB. 1`] = `
<div
  id="BioblocksVizApp"
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": "1000px",
    }
  }
>
  <Modal
    centered={true}
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    closeOnEscape={true}
    closeOnPortalMouseLeave={true}
    dimmer={true}
    eventPool="Modal"
    onClose={[Function]}
    open={false}
    size="fullscreen"
  >
    <FolderUploadComponent
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "lightblue",
          "border": "7px dashed blue",
          "height": "90vmin",
          "textAlign": "center",
        }
      }
    />
  </Modal>
  <ErrorMessageComponent
    couplingScores={
      e {
        "colCounter": 0,
        "contacts": Array [],
        "derivedFromCouplingScoresFlag": true,
        "indexRange": Object {
          "max": 1,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 0,
      }
    }
    errorMsg=""
    mismatches={Array []}
  />
  <Message>
    To get started, please drag and drop onto the page either:
    <br />
    (1) An evcouplings results directory.
    <br />
    (2) Individual .pdb, coupling scores
    <Popup
      content="A file that ends as 'CouplingScores.csv'"
      disabled={false}
      eventsEnabled={true}
      offset={0}
      on={
        Array [
          "click",
          "hover",
        ]
      }
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    , and residue mapping files
    <Popup
      content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
      disabled={false}
      eventsEnabled={true}
      offset={0}
      on={
        Array [
          "click",
          "hover",
        ]
      }
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    .
    <br />
    <br />
     Check out the
    <a
      href="http://evfold.org"
    >
       EVFold
    </a>
     or
    <a
      href="https://evcouplings.org/"
    >
       EVCouplings 
    </a>
     website to get these files.
  </Message>
  <Segment
    attached={true}
    raised={true}
  >
    <Grid
      centered={true}
      padded={true}
      relaxed={true}
    >
      <GridRow
        textAlign="right"
        verticalAlign="bottom"
      >
        <GridColumn
          style={
            Object {
              "height": "100%",
              "width": "auto",
            }
          }
        >
          <Button
            as="button"
            icon="trash"
            label={
              Object {
                "content": "Clean View",
              }
            }
            labelPosition="right"
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </GridColumn>
      </GridRow>
      <GridRow>
        <br />
      </GridRow>
      <GridRow
        columns={2}
        verticalAlign="bottom"
      >
        <GridColumn
          width={7}
        >
          <Component
            data={
              Object {
                "couplingScores": e {
                  "colCounter": 0,
                  "contacts": Array [],
                  "derivedFromCouplingScoresFlag": true,
                  "indexRange": Object {
                    "max": 1,
                    "min": 1,
                  },
                  "rowCounter": 0,
                  "scoreSource": "cn",
                  "totalStoredContacts": 0,
                },
                "pdbData": Object {
                  "experimental": undefined,
                },
                "secondaryStructures": Array [],
              }
            }
            isDataLoading={false}
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
          />
        </GridColumn>
        <GridColumn
          width={7}
        >
          <Component
            experimentalProteins={Array []}
            isDataLoading={false}
            measuredProximity="CLOSEST ATOM"
            onMeasuredProximityChange={[Function]}
            predictedProteins={Array []}
          />
        </GridColumn>
      </GridRow>
    </Grid>
  </Segment>
  <footer
    style={
      Object {
        "padding": "25vh 0 25px 25px",
      }
    }
  >
    Powered by 
    <a
      href="https://github.com/cBioCenter/bioblocks-viz"
    >
      Bioblocks
    </a>
    !
  </footer>
</div>
`;

exports[`VisualizationPage Should match existing snapshot when hooked up to a Redux store. 1`] = `
<h
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <withBBStore(Connect(VisualizationPageClass)) />
</h>
`;

exports[`VisualizationPage Should match existing snapshot when no props are provided. 1`] = `
<div
  id="BioblocksVizApp"
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": "1000px",
    }
  }
>
  <Modal
    centered={true}
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    closeOnEscape={true}
    closeOnPortalMouseLeave={true}
    dimmer={true}
    eventPool="Modal"
    onClose={[Function]}
    open={false}
    size="fullscreen"
  >
    <FolderUploadComponent
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "lightblue",
          "border": "7px dashed blue",
          "height": "90vmin",
          "textAlign": "center",
        }
      }
    />
  </Modal>
  <ErrorMessageComponent
    couplingScores={
      e {
        "colCounter": 0,
        "contacts": Array [],
        "derivedFromCouplingScoresFlag": true,
        "indexRange": Object {
          "max": 1,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 0,
      }
    }
    errorMsg=""
    mismatches={Array []}
  />
  <Message>
    To get started, please drag and drop onto the page either:
    <br />
    (1) An evcouplings results directory.
    <br />
    (2) Individual .pdb, coupling scores
    <Popup
      content="A file that ends as 'CouplingScores.csv'"
      disabled={false}
      eventsEnabled={true}
      offset={0}
      on={
        Array [
          "click",
          "hover",
        ]
      }
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    , and residue mapping files
    <Popup
      content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
      disabled={false}
      eventsEnabled={true}
      offset={0}
      on={
        Array [
          "click",
          "hover",
        ]
      }
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    .
    <br />
    <br />
     Check out the
    <a
      href="http://evfold.org"
    >
       EVFold
    </a>
     or
    <a
      href="https://evcouplings.org/"
    >
       EVCouplings 
    </a>
     website to get these files.
  </Message>
  <Segment
    attached={true}
    raised={true}
  >
    <Grid
      centered={true}
      padded={true}
      relaxed={true}
    >
      <GridRow
        textAlign="right"
        verticalAlign="bottom"
      >
        <GridColumn
          style={
            Object {
              "height": "100%",
              "width": "auto",
            }
          }
        >
          <Button
            as="button"
            icon="trash"
            label={
              Object {
                "content": "Clean View",
              }
            }
            labelPosition="right"
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </GridColumn>
      </GridRow>
      <GridRow>
        <br />
      </GridRow>
      <GridRow
        columns={2}
        verticalAlign="bottom"
      >
        <GridColumn
          width={7}
        >
          <Component
            data={
              Object {
                "couplingScores": e {
                  "colCounter": 0,
                  "contacts": Array [],
                  "derivedFromCouplingScoresFlag": true,
                  "indexRange": Object {
                    "max": 1,
                    "min": 1,
                  },
                  "rowCounter": 0,
                  "scoreSource": "cn",
                  "totalStoredContacts": 0,
                },
                "pdbData": Object {
                  "experimental": undefined,
                },
                "secondaryStructures": Array [],
              }
            }
            isDataLoading={false}
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
          />
        </GridColumn>
        <GridColumn
          width={7}
        >
          <Component
            experimentalProteins={Array []}
            isDataLoading={false}
            measuredProximity="CLOSEST ATOM"
            onMeasuredProximityChange={[Function]}
            predictedProteins={Array []}
          />
        </GridColumn>
      </GridRow>
    </Grid>
  </Segment>
  <footer
    style={
      Object {
        "padding": "25vh 0 25px 25px",
      }
    }
  >
    Powered by 
    <a
      href="https://github.com/cBioCenter/bioblocks-viz"
    >
      Bioblocks
    </a>
    !
  </footer>
</div>
`;

exports[`VisualizationPage Should match existing snapshot when using c-alpha proximity. 1`] = `
<div
  id="BioblocksVizApp"
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": "1000px",
    }
  }
>
  <Modal
    centered={true}
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    closeOnEscape={true}
    closeOnPortalMouseLeave={true}
    dimmer={true}
    eventPool="Modal"
    onClose={[Function]}
    open={false}
    size="fullscreen"
  >
    <FolderUploadComponent
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "lightblue",
          "border": "7px dashed blue",
          "height": "90vmin",
          "textAlign": "center",
        }
      }
    />
  </Modal>
  <ErrorMessageComponent
    couplingScores={
      e {
        "colCounter": 0,
        "contacts": Array [],
        "derivedFromCouplingScoresFlag": true,
        "indexRange": Object {
          "max": 1,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 0,
      }
    }
    errorMsg=""
    mismatches={Array []}
  />
  <Message>
    To get started, please drag and drop onto the page either:
    <br />
    (1) An evcouplings results directory.
    <br />
    (2) Individual .pdb, coupling scores
    <Popup
      content="A file that ends as 'CouplingScores.csv'"
      disabled={false}
      eventsEnabled={true}
      offset={0}
      on={
        Array [
          "click",
          "hover",
        ]
      }
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    , and residue mapping files
    <Popup
      content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
      disabled={false}
      eventsEnabled={true}
      offset={0}
      on={
        Array [
          "click",
          "hover",
        ]
      }
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    .
    <br />
    <br />
     Check out the
    <a
      href="http://evfold.org"
    >
       EVFold
    </a>
     or
    <a
      href="https://evcouplings.org/"
    >
       EVCouplings 
    </a>
     website to get these files.
  </Message>
  <Segment
    attached={true}
    raised={true}
  >
    <Grid
      centered={true}
      padded={true}
      relaxed={true}
    >
      <GridRow
        textAlign="right"
        verticalAlign="bottom"
      >
        <GridColumn
          style={
            Object {
              "height": "100%",
              "width": "auto",
            }
          }
        >
          <Button
            as="button"
            icon="trash"
            label={
              Object {
                "content": "Clean View",
              }
            }
            labelPosition="right"
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </GridColumn>
      </GridRow>
      <GridRow>
        <br />
      </GridRow>
      <GridRow
        columns={2}
        verticalAlign="bottom"
      >
        <GridColumn
          width={7}
        >
          <Component
            data={
              Object {
                "couplingScores": e {
                  "colCounter": 0,
                  "contacts": Array [],
                  "derivedFromCouplingScoresFlag": true,
                  "indexRange": Object {
                    "max": 1,
                    "min": 1,
                  },
                  "rowCounter": 0,
                  "scoreSource": "cn",
                  "totalStoredContacts": 0,
                },
                "pdbData": Object {
                  "experimental": undefined,
                },
                "secondaryStructures": Array [],
              }
            }
            isDataLoading={false}
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
          />
        </GridColumn>
        <GridColumn
          width={7}
        >
          <Component
            experimentalProteins={Array []}
            isDataLoading={false}
            measuredProximity="C-α"
            onMeasuredProximityChange={[Function]}
            predictedProteins={Array []}
          />
        </GridColumn>
      </GridRow>
    </Grid>
  </Segment>
  <footer
    style={
      Object {
        "padding": "25vh 0 25px 25px",
      }
    }
  >
    Powered by 
    <a
      href="https://github.com/cBioCenter/bioblocks-viz"
    >
      Bioblocks
    </a>
    !
  </footer>
</div>
`;

exports[`VisualizationPage Should match existing snapshot when using closest proximity. 1`] = `
<div
  id="BioblocksVizApp"
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": "1000px",
    }
  }
>
  <Modal
    centered={true}
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    closeOnEscape={true}
    closeOnPortalMouseLeave={true}
    dimmer={true}
    eventPool="Modal"
    onClose={[Function]}
    open={false}
    size="fullscreen"
  >
    <FolderUploadComponent
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "lightblue",
          "border": "7px dashed blue",
          "height": "90vmin",
          "textAlign": "center",
        }
      }
    />
  </Modal>
  <ErrorMessageComponent
    couplingScores={
      e {
        "colCounter": 0,
        "contacts": Array [],
        "derivedFromCouplingScoresFlag": true,
        "indexRange": Object {
          "max": 1,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 0,
      }
    }
    errorMsg=""
    mismatches={Array []}
  />
  <Message>
    To get started, please drag and drop onto the page either:
    <br />
    (1) An evcouplings results directory.
    <br />
    (2) Individual .pdb, coupling scores
    <Popup
      content="A file that ends as 'CouplingScores.csv'"
      disabled={false}
      eventsEnabled={true}
      offset={0}
      on={
        Array [
          "click",
          "hover",
        ]
      }
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    , and residue mapping files
    <Popup
      content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
      disabled={false}
      eventsEnabled={true}
      offset={0}
      on={
        Array [
          "click",
          "hover",
        ]
      }
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    .
    <br />
    <br />
     Check out the
    <a
      href="http://evfold.org"
    >
       EVFold
    </a>
     or
    <a
      href="https://evcouplings.org/"
    >
       EVCouplings 
    </a>
     website to get these files.
  </Message>
  <Segment
    attached={true}
    raised={true}
  >
    <Grid
      centered={true}
      padded={true}
      relaxed={true}
    >
      <GridRow
        textAlign="right"
        verticalAlign="bottom"
      >
        <GridColumn
          style={
            Object {
              "height": "100%",
              "width": "auto",
            }
          }
        >
          <Button
            as="button"
            icon="trash"
            label={
              Object {
                "content": "Clean View",
              }
            }
            labelPosition="right"
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </GridColumn>
      </GridRow>
      <GridRow>
        <br />
      </GridRow>
      <GridRow
        columns={2}
        verticalAlign="bottom"
      >
        <GridColumn
          width={7}
        >
          <Component
            data={
              Object {
                "couplingScores": e {
                  "colCounter": 0,
                  "contacts": Array [],
                  "derivedFromCouplingScoresFlag": true,
                  "indexRange": Object {
                    "max": 1,
                    "min": 1,
                  },
                  "rowCounter": 0,
                  "scoreSource": "cn",
                  "totalStoredContacts": 0,
                },
                "pdbData": Object {
                  "experimental": undefined,
                },
                "secondaryStructures": Array [],
              }
            }
            isDataLoading={false}
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
          />
        </GridColumn>
        <GridColumn
          width={7}
        >
          <Component
            experimentalProteins={Array []}
            isDataLoading={false}
            measuredProximity="CLOSEST ATOM"
            onMeasuredProximityChange={[Function]}
            predictedProteins={Array []}
          />
        </GridColumn>
      </GridRow>
    </Grid>
  </Segment>
  <footer
    style={
      Object {
        "padding": "25vh 0 25px 25px",
      }
    }
  >
    Powered by 
    <a
      href="https://github.com/cBioCenter/bioblocks-viz"
    >
      Bioblocks
    </a>
    !
  </footer>
</div>
`;
