// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VisualizationPage Should match existing snapshot when given a PDB. 1`] = `
<div
  id="BioblocksVizApp"
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": "1000px",
    }
  }
>
  <Modal
    centered={true}
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    closeOnEscape={true}
    closeOnPortalMouseLeave={true}
    dimmer={true}
    eventPool="Modal"
    onClose={[Function]}
    open={false}
    size="fullscreen"
  >
    <FolderUploadComponent
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "lightblue",
          "border": "7px dashed blue",
          "height": "90vmin",
          "textAlign": "center",
        }
      }
    />
  </Modal>
  <ErrorMessageComponent
    couplingScores={
      CouplingContainer {
        "colCounter": 0,
        "contacts": Array [],
        "derivedFromCouplingScoresFlag": true,
        "getCouplingScore": [Function],
        "includes": [Function],
        "indexRange": Object {
          "max": 1,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 0,
      }
    }
    errorMsg=""
    mismatches={Array []}
  />
  <Message>
    To get started, please drag and drop onto the page either:
    <br />
    (1) An evcouplings results directory.
    <br />
    (2) Individual .pdb, coupling scores
    <Popup
      content="A file that ends as 'CouplingScores.csv'"
      disabled={false}
      offset={0}
      on="hover"
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    , and residue mapping files
    <Popup
      content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
      disabled={false}
      offset={0}
      on="hover"
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    .
    <br />
    <br />
     Check out the
    <a
      href="http://evfold.org"
    >
       EVFold
    </a>
     or
    <a
      href="https://evcouplings.org/"
    >
       EVCouplings 
    </a>
     website to get these files.
  </Message>
  <Segment
    attached={true}
    raised={true}
  >
    <Grid
      centered={true}
      padded={true}
      relaxed={true}
    >
      <GridRow
        textAlign="right"
        verticalAlign="bottom"
      >
        <GridColumn
          style={
            Object {
              "height": "100%",
              "width": "auto",
            }
          }
        >
          <Button
            as="button"
            icon="trash"
            label={
              Object {
                "content": "Clean View",
              }
            }
            labelPosition="right"
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </GridColumn>
      </GridRow>
      <GridRow>
        <br />
      </GridRow>
      <GridRow
        columns={2}
        verticalAlign="bottom"
      >
        <GridColumn
          width={7}
        >
          <PredictedContactMap
            agreementColor="#ff0000"
            allColor="#000000"
            data={
              Object {
                "couplingScores": CouplingContainer {
                  "colCounter": 0,
                  "contacts": Array [],
                  "derivedFromCouplingScoresFlag": true,
                  "getCouplingScore": [Function],
                  "includes": [Function],
                  "indexRange": Object {
                    "max": 1,
                    "min": 1,
                  },
                  "rowCounter": 0,
                  "scoreSource": "cn",
                  "totalStoredContacts": 0,
                },
                "pdbData": Object {
                  "experimental": undefined,
                },
                "secondaryStructures": Array [],
              }
            }
            filters={Array []}
            height="100%"
            highlightColor="#ff8800"
            isDataLoading={false}
            observedColor="#0000ff"
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
            width="100%"
          />
        </GridColumn>
        <GridColumn
          width={7}
        >
          <Connect(NGLContainerClass)
            experimentalProteins={Array []}
            isDataLoading={false}
            measuredProximity="CLOSEST ATOM"
            onMeasuredProximityChange={[Function]}
            predictedProteins={Array []}
          />
        </GridColumn>
      </GridRow>
    </Grid>
  </Segment>
  <footer
    style={
      Object {
        "padding": "25vh 0 25px 25px",
      }
    }
  >
    Powered by 
    <a
      href="https://github.com/cBioCenter/bioblocks-viz"
    >
      Bioblocks
    </a>
    !
  </footer>
</div>
`;

exports[`VisualizationPage Should match existing snapshot when hooked up to a Redux store. 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(VisualizationPageClass)>
    <VisualizationPageClass
      clearAllResidues={[Function]}
      clearAllSecondaryStructures={[Function]}
      style={
        Object {
          "backgroundColor": "#ffffff",
        }
      }
    >
      <div
        id="BioblocksVizApp"
        style={
          Object {
            "backgroundColor": "#ffffff",
            "height": "1000px",
          }
        }
      >
        <Modal
          centered={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          closeOnEscape={true}
          closeOnPortalMouseLeave={true}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={false}
          size="fullscreen"
        >
          <Portal
            closeOnDocumentClick={false}
            closeOnEscape={true}
            closeOnPortalMouseLeave={true}
            eventPool="Modal"
            mountNode={
              <body>
                <svg
                  id="js-plotly-tester"
                  style="position: absolute; left: -10000px; top: -10000px; width: 9000px; height: 9000px; z-index: 1;"
                  xmlns="http://www.w3.org/2000/svg"
                  xmlns:xlink="http://www.w3.org/1999/xlink"
                >
                  <path
                    class="js-reference-point"
                    d="M0,0H1V1H0Z"
                    style="stroke-width: 0; fill: black;"
                  />
                </svg>
              </body>
            }
            onClose={[Function]}
            onMount={[Function]}
            onOpen={[Function]}
            onUnmount={[Function]}
            open={false}
            openOnTriggerClick={true}
          />
        </Modal>
        <ErrorMessageComponent
          couplingScores={
            CouplingContainer {
              "colCounter": 0,
              "contacts": Array [],
              "derivedFromCouplingScoresFlag": true,
              "getCouplingScore": [Function],
              "includes": [Function],
              "indexRange": Object {
                "max": 1,
                "min": 1,
              },
              "rowCounter": 0,
              "scoreSource": "cn",
              "totalStoredContacts": 0,
            }
          }
          errorMsg=""
          mismatches={Array []}
        />
        <Message>
          <div
            className="ui message"
          >
            To get started, please drag and drop onto the page either:
            <br />
            (1) An evcouplings results directory.
            <br />
            (2) Individual .pdb, coupling scores
            <Popup
              content="A file that ends as 'CouplingScores.csv'"
              disabled={false}
              offset={0}
              on="hover"
              pinned={false}
              position="top left"
              trigger={
                <a>
                  (?)
                </a>
              }
            >
              <Portal
                closeOnDocumentClick={true}
                closeOnEscape={true}
                closeOnTriggerMouseLeave={true}
                eventPool="default"
                mouseEnterDelay={50}
                mouseLeaveDelay={70}
                onClose={[Function]}
                onMount={[Function]}
                onOpen={[Function]}
                onUnmount={[Function]}
                openOnTriggerClick={true}
                openOnTriggerMouseEnter={true}
                trigger={
                  <a>
                    (?)
                  </a>
                }
                triggerRef={
                  Object {
                    "current": <a>
                      (?)
                    </a>,
                  }
                }
              >
                <Ref
                  innerRef={[Function]}
                >
                  <RefFindNode
                    innerRef={[Function]}
                  >
                    <a
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      (?)
                    </a>
                  </RefFindNode>
                </Ref>
              </Portal>
            </Popup>
            , and residue mapping files
            <Popup
              content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
              disabled={false}
              offset={0}
              on="hover"
              pinned={false}
              position="top left"
              trigger={
                <a>
                  (?)
                </a>
              }
            >
              <Portal
                closeOnDocumentClick={true}
                closeOnEscape={true}
                closeOnTriggerMouseLeave={true}
                eventPool="default"
                mouseEnterDelay={50}
                mouseLeaveDelay={70}
                onClose={[Function]}
                onMount={[Function]}
                onOpen={[Function]}
                onUnmount={[Function]}
                openOnTriggerClick={true}
                openOnTriggerMouseEnter={true}
                trigger={
                  <a>
                    (?)
                  </a>
                }
                triggerRef={
                  Object {
                    "current": <a>
                      (?)
                    </a>,
                  }
                }
              >
                <Ref
                  innerRef={[Function]}
                >
                  <RefFindNode
                    innerRef={[Function]}
                  >
                    <a
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      (?)
                    </a>
                  </RefFindNode>
                </Ref>
              </Portal>
            </Popup>
            .
            <br />
            <br />
             Check out the
            <a
              href="http://evfold.org"
            >
               EVFold
            </a>
             or
            <a
              href="https://evcouplings.org/"
            >
               EVCouplings 
            </a>
             website to get these files.
          </div>
        </Message>
        <Segment
          attached={true}
          raised={true}
        >
          <div
            className="ui raised attached segment"
          >
            <Grid
              centered={true}
              padded={true}
              relaxed={true}
            >
              <div
                className="ui centered padded relaxed grid"
              >
                <GridRow
                  textAlign="right"
                  verticalAlign="bottom"
                >
                  <div
                    className="right aligned bottom aligned row"
                  >
                    <GridColumn
                      style={
                        Object {
                          "height": "100%",
                          "width": "auto",
                        }
                      }
                    >
                      <div
                        className="column"
                        style={
                          Object {
                            "height": "100%",
                            "width": "auto",
                          }
                        }
                      >
                        <Button
                          as="button"
                          icon="trash"
                          label={
                            Object {
                              "content": "Clean View",
                            }
                          }
                          labelPosition="right"
                          onClick={[Function]}
                          style={
                            Object {
                              "height": "100%",
                            }
                          }
                        >
                          <div
                            className="ui right labeled button"
                            onClick={[Function]}
                            style={
                              Object {
                                "height": "100%",
                              }
                            }
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <button
                                    class="ui icon button"
                                    tabindex="0"
                                  >
                                    <i
                                      aria-hidden="true"
                                      class="trash icon"
                                    />
                                     
                                  </button>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui icon button"
                                      tabindex="0"
                                    >
                                      <i
                                        aria-hidden="true"
                                        class="trash icon"
                                      />
                                       
                                    </button>,
                                  }
                                }
                              >
                                <button
                                  className="ui icon button"
                                  tabIndex={0}
                                >
                                  <Icon
                                    as="i"
                                    name="trash"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="trash icon"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                   
                                </button>
                              </RefFindNode>
                            </Ref>
                            <Label
                              basic={true}
                              content="Clean View"
                              pointing="left"
                            >
                              <div
                                className="ui left pointing basic label"
                                onClick={[Function]}
                              >
                                Clean View
                              </div>
                            </Label>
                          </div>
                        </Button>
                      </div>
                    </GridColumn>
                  </div>
                </GridRow>
                <GridRow>
                  <div
                    className="row"
                  >
                    <br />
                  </div>
                </GridRow>
                <GridRow
                  columns={2}
                  verticalAlign="bottom"
                >
                  <div
                    className="bottom aligned two column row"
                  >
                    <GridColumn
                      width={7}
                    >
                      <div
                        className="seven wide column"
                      >
                        <PredictedContactMap
                          agreementColor="#ff0000"
                          allColor="#000000"
                          data={
                            Object {
                              "couplingScores": CouplingContainer {
                                "colCounter": 0,
                                "contacts": Array [],
                                "derivedFromCouplingScoresFlag": true,
                                "getCouplingScore": [Function],
                                "includes": [Function],
                                "indexRange": Object {
                                  "max": 1,
                                  "min": 1,
                                },
                                "rowCounter": 0,
                                "scoreSource": "cn",
                                "totalStoredContacts": 0,
                              },
                              "pdbData": Object {
                                "experimental": undefined,
                              },
                              "secondaryStructures": Array [],
                            }
                          }
                          filters={Array []}
                          height="100%"
                          highlightColor="#ff8800"
                          isDataLoading={false}
                          observedColor="#0000ff"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                            }
                          }
                          width="100%"
                        >
                          <Provider
                            store={
                              Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              }
                            }
                          >
                            <div
                              className="PredictedContactMapComponent"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                }
                              }
                            >
                              <Connect(ContactMapClass)
                                agreementColor="#ff0000"
                                allColor="#000000"
                                configurations={
                                  Array [
                                    Object {
                                      "marks": Object {
                                        "0": "0",
                                        "1": "L",
                                        "2": "2L",
                                        "3": "3L",
                                      },
                                      "name": "# Couplings to Display",
                                      "onChange": [Function],
                                      "type": "SLIDER",
                                      "values": Object {
                                        "current": 0,
                                        "defaultValue": 0,
                                        "max": 3,
                                        "min": 0,
                                      },
                                    },
                                    Object {
                                      "name": "Linear Distance Filter (|i - j|)",
                                      "onChange": [Function],
                                      "type": "SLIDER",
                                      "values": Object {
                                        "current": 5,
                                        "defaultValue": 5,
                                        "max": 10,
                                        "min": 1,
                                      },
                                    },
                                    Object {
                                      "name": "Minimum Probability",
                                      "onChange": [Function],
                                      "step": 0.01,
                                      "type": "SLIDER",
                                      "values": Object {
                                        "current": 0.9,
                                        "defaultValue": 0.9,
                                        "max": 1,
                                        "min": 0,
                                      },
                                    },
                                  ]
                                }
                                data={
                                  Object {
                                    "couplingScores": CouplingContainer {
                                      "colCounter": 0,
                                      "contacts": Array [],
                                      "derivedFromCouplingScoresFlag": true,
                                      "getCouplingScore": [Function],
                                      "includes": [Function],
                                      "indexRange": Object {
                                        "max": 1,
                                        "min": 1,
                                      },
                                      "rowCounter": 0,
                                      "scoreSource": "cn",
                                      "totalStoredContacts": 0,
                                    },
                                    "pdbData": Object {
                                      "experimental": undefined,
                                    },
                                    "secondaryStructures": Array [],
                                  }
                                }
                                filters={Array []}
                                formattedPoints={
                                  Array [
                                    Object {
                                      "hoverinfo": "text",
                                      "marker": Object {
                                        "color": Array [],
                                      },
                                      "mode": "lines+markers",
                                      "name": "Inferred Contact",
                                      "nodeSize": 4,
                                      "points": Array [],
                                      "subtitle": "(N=0, L=1)",
                                      "text": Array [],
                                    },
                                    Object {
                                      "hoverinfo": "text",
                                      "marker": Object {
                                        "color": Array [],
                                      },
                                      "mode": "lines+markers",
                                      "name": "Inferred Contact Agrees with PDB Contact",
                                      "nodeSize": 6,
                                      "points": Array [],
                                      "subtitle": "(N=0, NaN%)",
                                      "text": Array [],
                                    },
                                  ]
                                }
                                height="100%"
                                highlightColor="#ff8800"
                                isDataLoading={false}
                                observedColor="#0000ff"
                                width="100%"
                              >
                                <ContactMapClass
                                  addHoveredResidues={[Function]}
                                  addHoveredSecondaryStructure={[Function]}
                                  addSelectedSecondaryStructure={[Function]}
                                  agreementColor="#ff0000"
                                  allColor="#000000"
                                  candidateResidues={Array []}
                                  configurations={
                                    Array [
                                      Object {
                                        "marks": Object {
                                          "0": "0",
                                          "1": "L",
                                          "2": "2L",
                                          "3": "3L",
                                        },
                                        "name": "# Couplings to Display",
                                        "onChange": [Function],
                                        "type": "SLIDER",
                                        "values": Object {
                                          "current": 0,
                                          "defaultValue": 0,
                                          "max": 3,
                                          "min": 0,
                                        },
                                      },
                                      Object {
                                        "name": "Linear Distance Filter (|i - j|)",
                                        "onChange": [Function],
                                        "type": "SLIDER",
                                        "values": Object {
                                          "current": 5,
                                          "defaultValue": 5,
                                          "max": 10,
                                          "min": 1,
                                        },
                                      },
                                      Object {
                                        "name": "Minimum Probability",
                                        "onChange": [Function],
                                        "step": 0.01,
                                        "type": "SLIDER",
                                        "values": Object {
                                          "current": 0.9,
                                          "defaultValue": 0.9,
                                          "max": 1,
                                          "min": 0,
                                        },
                                      },
                                    ]
                                  }
                                  data={
                                    Object {
                                      "couplingScores": CouplingContainer {
                                        "colCounter": 0,
                                        "contacts": Array [],
                                        "derivedFromCouplingScoresFlag": true,
                                        "getCouplingScore": [Function],
                                        "includes": [Function],
                                        "indexRange": Object {
                                          "max": 1,
                                          "min": 1,
                                        },
                                        "rowCounter": 0,
                                        "scoreSource": "cn",
                                        "totalStoredContacts": 0,
                                      },
                                      "pdbData": Object {
                                        "experimental": undefined,
                                      },
                                      "secondaryStructures": Array [],
                                    }
                                  }
                                  enableSliders={true}
                                  filters={Array []}
                                  formattedPoints={
                                    Array [
                                      Object {
                                        "hoverinfo": "text",
                                        "marker": Object {
                                          "color": Array [],
                                        },
                                        "mode": "lines+markers",
                                        "name": "Inferred Contact",
                                        "nodeSize": 4,
                                        "points": Array [],
                                        "subtitle": "(N=0, L=1)",
                                        "text": Array [],
                                      },
                                      Object {
                                        "hoverinfo": "text",
                                        "marker": Object {
                                          "color": Array [],
                                        },
                                        "mode": "lines+markers",
                                        "name": "Inferred Contact Agrees with PDB Contact",
                                        "nodeSize": 6,
                                        "points": Array [],
                                        "subtitle": "(N=0, NaN%)",
                                        "text": Array [],
                                      },
                                    ]
                                  }
                                  height="100%"
                                  highlightColor="#ff8800"
                                  hoveredResidues={Array []}
                                  hoveredSecondaryStructures={Array []}
                                  isDataLoading={false}
                                  lockedResiduePairs={Object {}}
                                  observedColor="#0000ff"
                                  removeAllLockedResiduePairs={[Function]}
                                  removeAllSelectedSecondaryStructures={[Function]}
                                  removeHoveredResidues={[Function]}
                                  removeHoveredSecondaryStructure={[Function]}
                                  removeSecondaryStructure={[Function]}
                                  selectedSecondaryStructures={Array []}
                                  showConfigurations={true}
                                  toggleLockedResiduePair={[Function]}
                                  width="100%"
                                >
                                  <ComponentCard
                                    componentName="Contact Map"
                                    dockItems={
                                      Array [
                                        Object {
                                          "isVisibleCb": [Function],
                                          "onClick": [Function],
                                          "text": "Clear Selections",
                                        },
                                      ]
                                    }
                                    expandedStyle={
                                      Object {
                                        "height": "85vh",
                                        "width": "85vh",
                                      }
                                    }
                                    frameHeight={0}
                                    frameWidth={0}
                                    headerHeight={20}
                                    height="525px"
                                    iconSrc="assets/icons/bio-blocks-icon.svg"
                                    isDataReady={false}
                                    isFramedComponent={false}
                                    isFullPage={false}
                                    menuItems={
                                      Array [
                                        Object {
                                          "component": Object {
                                            "configs": Object {
                                              "Filters": Array [
                                                Object {
                                                  "marks": Object {
                                                    "0": "0",
                                                    "1": "L",
                                                    "2": "2L",
                                                    "3": "3L",
                                                  },
                                                  "name": "# Couplings to Display",
                                                  "onChange": [Function],
                                                  "type": "SLIDER",
                                                  "values": Object {
                                                    "current": 0,
                                                    "defaultValue": 0,
                                                    "max": 3,
                                                    "min": 0,
                                                  },
                                                },
                                                Object {
                                                  "name": "Linear Distance Filter (|i - j|)",
                                                  "onChange": [Function],
                                                  "type": "SLIDER",
                                                  "values": Object {
                                                    "current": 5,
                                                    "defaultValue": 5,
                                                    "max": 10,
                                                    "min": 1,
                                                  },
                                                },
                                                Object {
                                                  "name": "Minimum Probability",
                                                  "onChange": [Function],
                                                  "step": 0.01,
                                                  "type": "SLIDER",
                                                  "values": Object {
                                                    "current": 0.9,
                                                    "defaultValue": 0.9,
                                                    "max": 1,
                                                    "min": 0,
                                                  },
                                                },
                                              ],
                                            },
                                            "name": "POPUP",
                                          },
                                          "description": "Filter",
                                          "iconName": "filter",
                                        },
                                        Object {
                                          "component": Object {
                                            "configs": Object {
                                              "Node Sizes": Array [
                                                Object {
                                                  "id": "node-size-slider-0",
                                                  "name": "Structure Contact (Coupling Scores)",
                                                  "options": Array [
                                                    <Icon
                                                      as="i"
                                                      name="minus"
                                                      onClick={[Function]}
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": "#0000ff",
                                                        }
                                                      }
                                                    />,
                                                    <Icon
                                                      as="i"
                                                      name="circle"
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": "#0000ff",
                                                        }
                                                      }
                                                    />,
                                                    <Icon
                                                      as="i"
                                                      name="plus"
                                                      onClick={[Function]}
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": "#0000ff",
                                                        }
                                                      }
                                                    />,
                                                  ],
                                                  "style": Object {
                                                    "padding": ".5em",
                                                  },
                                                  "type": "BUTTON_GROUP",
                                                },
                                                Object {
                                                  "id": "node-size-slider-1",
                                                  "name": "Inferred Contact",
                                                  "options": Array [
                                                    <Icon
                                                      as="i"
                                                      name="minus"
                                                      onClick={[Function]}
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    />,
                                                    <Icon
                                                      as="i"
                                                      name="circle"
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    />,
                                                    <Icon
                                                      as="i"
                                                      name="plus"
                                                      onClick={[Function]}
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    />,
                                                  ],
                                                  "style": Object {
                                                    "padding": ".5em",
                                                  },
                                                  "type": "BUTTON_GROUP",
                                                },
                                                Object {
                                                  "id": "node-size-slider-2",
                                                  "name": "Inferred Contact Agrees with PDB Contact",
                                                  "options": Array [
                                                    <Icon
                                                      as="i"
                                                      name="minus"
                                                      onClick={[Function]}
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    />,
                                                    <Icon
                                                      as="i"
                                                      name="circle"
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    />,
                                                    <Icon
                                                      as="i"
                                                      name="plus"
                                                      onClick={[Function]}
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    />,
                                                  ],
                                                  "style": Object {
                                                    "padding": ".5em",
                                                  },
                                                  "type": "BUTTON_GROUP",
                                                },
                                                Object {
                                                  "id": "node-size-slider-3",
                                                  "name": "Selected Residue Pair",
                                                  "options": Array [
                                                    <Icon
                                                      as="i"
                                                      name="minus"
                                                      onClick={[Function]}
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": "#ff8800",
                                                        }
                                                      }
                                                    />,
                                                    <Icon
                                                      as="i"
                                                      name="circle"
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": "#ff8800",
                                                        }
                                                      }
                                                    />,
                                                    <Icon
                                                      as="i"
                                                      name="plus"
                                                      onClick={[Function]}
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "color": "#ff8800",
                                                        }
                                                      }
                                                    />,
                                                  ],
                                                  "style": Object {
                                                    "padding": ".5em",
                                                  },
                                                  "type": "BUTTON_GROUP",
                                                },
                                              ],
                                            },
                                            "name": "POPUP",
                                          },
                                          "description": "Settings",
                                        },
                                      ]
                                    }
                                    padding={0}
                                    showSettings={false}
                                    width="525px"
                                  >
                                    <Card
                                      centered={true}
                                      className="bioblocks-component-card"
                                      style={
                                        Object {
                                          "height": "530.25px",
                                          "maxWidth": "unset",
                                          "padding": "0 0 0 5px",
                                          "width": "525px",
                                        }
                                      }
                                    >
                                      <div
                                        className="ui centered card bioblocks-component-card"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "height": "530.25px",
                                            "maxWidth": "unset",
                                            "padding": "0 0 0 5px",
                                            "width": "525px",
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "height": "7%",
                                            }
                                          }
                                        >
                                          <ComponentMenuBar
                                            componentName="Contact Map"
                                            height={20}
                                            iconSrc="assets/icons/bio-blocks-icon.svg"
                                            isExpanded={false}
                                            menuItems={
                                              Array [
                                                Object {
                                                  "component": Object {
                                                    "configs": Object {
                                                      "Filters": Array [
                                                        Object {
                                                          "marks": Object {
                                                            "0": "0",
                                                            "1": "L",
                                                            "2": "2L",
                                                            "3": "3L",
                                                          },
                                                          "name": "# Couplings to Display",
                                                          "onChange": [Function],
                                                          "type": "SLIDER",
                                                          "values": Object {
                                                            "current": 0,
                                                            "defaultValue": 0,
                                                            "max": 3,
                                                            "min": 0,
                                                          },
                                                        },
                                                        Object {
                                                          "name": "Linear Distance Filter (|i - j|)",
                                                          "onChange": [Function],
                                                          "type": "SLIDER",
                                                          "values": Object {
                                                            "current": 5,
                                                            "defaultValue": 5,
                                                            "max": 10,
                                                            "min": 1,
                                                          },
                                                        },
                                                        Object {
                                                          "name": "Minimum Probability",
                                                          "onChange": [Function],
                                                          "step": 0.01,
                                                          "type": "SLIDER",
                                                          "values": Object {
                                                            "current": 0.9,
                                                            "defaultValue": 0.9,
                                                            "max": 1,
                                                            "min": 0,
                                                          },
                                                        },
                                                      ],
                                                    },
                                                    "name": "POPUP",
                                                  },
                                                  "description": "Filter",
                                                  "iconName": "filter",
                                                },
                                                Object {
                                                  "component": Object {
                                                    "configs": Object {
                                                      "Node Sizes": Array [
                                                        Object {
                                                          "id": "node-size-slider-0",
                                                          "name": "Structure Contact (Coupling Scores)",
                                                          "options": Array [
                                                            <Icon
                                                              as="i"
                                                              name="minus"
                                                              onClick={[Function]}
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": "#0000ff",
                                                                }
                                                              }
                                                            />,
                                                            <Icon
                                                              as="i"
                                                              name="circle"
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": "#0000ff",
                                                                }
                                                              }
                                                            />,
                                                            <Icon
                                                              as="i"
                                                              name="plus"
                                                              onClick={[Function]}
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": "#0000ff",
                                                                }
                                                              }
                                                            />,
                                                          ],
                                                          "style": Object {
                                                            "padding": ".5em",
                                                          },
                                                          "type": "BUTTON_GROUP",
                                                        },
                                                        Object {
                                                          "id": "node-size-slider-1",
                                                          "name": "Inferred Contact",
                                                          "options": Array [
                                                            <Icon
                                                              as="i"
                                                              name="minus"
                                                              onClick={[Function]}
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": undefined,
                                                                }
                                                              }
                                                            />,
                                                            <Icon
                                                              as="i"
                                                              name="circle"
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": undefined,
                                                                }
                                                              }
                                                            />,
                                                            <Icon
                                                              as="i"
                                                              name="plus"
                                                              onClick={[Function]}
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": undefined,
                                                                }
                                                              }
                                                            />,
                                                          ],
                                                          "style": Object {
                                                            "padding": ".5em",
                                                          },
                                                          "type": "BUTTON_GROUP",
                                                        },
                                                        Object {
                                                          "id": "node-size-slider-2",
                                                          "name": "Inferred Contact Agrees with PDB Contact",
                                                          "options": Array [
                                                            <Icon
                                                              as="i"
                                                              name="minus"
                                                              onClick={[Function]}
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": undefined,
                                                                }
                                                              }
                                                            />,
                                                            <Icon
                                                              as="i"
                                                              name="circle"
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": undefined,
                                                                }
                                                              }
                                                            />,
                                                            <Icon
                                                              as="i"
                                                              name="plus"
                                                              onClick={[Function]}
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": undefined,
                                                                }
                                                              }
                                                            />,
                                                          ],
                                                          "style": Object {
                                                            "padding": ".5em",
                                                          },
                                                          "type": "BUTTON_GROUP",
                                                        },
                                                        Object {
                                                          "id": "node-size-slider-3",
                                                          "name": "Selected Residue Pair",
                                                          "options": Array [
                                                            <Icon
                                                              as="i"
                                                              name="minus"
                                                              onClick={[Function]}
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": "#ff8800",
                                                                }
                                                              }
                                                            />,
                                                            <Icon
                                                              as="i"
                                                              name="circle"
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": "#ff8800",
                                                                }
                                                              }
                                                            />,
                                                            <Icon
                                                              as="i"
                                                              name="plus"
                                                              onClick={[Function]}
                                                              size="small"
                                                              style={
                                                                Object {
                                                                  "color": "#ff8800",
                                                                }
                                                              }
                                                            />,
                                                          ],
                                                          "style": Object {
                                                            "padding": ".5em",
                                                          },
                                                          "type": "BUTTON_GROUP",
                                                        },
                                                      ],
                                                    },
                                                    "name": "POPUP",
                                                  },
                                                  "description": "Settings",
                                                },
                                              ]
                                            }
                                            onExpandToggleCb={[Function]}
                                            opacity={0.85}
                                            width="100%"
                                          >
                                            <div
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                            >
                                              <Menu
                                                secondary={true}
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "margin": 0,
                                                  }
                                                }
                                              >
                                                <div
                                                  className="ui secondary menu"
                                                  style={
                                                    Object {
                                                      "height": 20,
                                                      "margin": 0,
                                                    }
                                                  }
                                                >
                                                  <Menu
                                                    fluid={false}
                                                    secondary={true}
                                                    style={
                                                      Object {
                                                        "width": "auto",
                                                      }
                                                    }
                                                    widths={6}
                                                  >
                                                    <div
                                                      className="ui secondary six item menu"
                                                      style={
                                                        Object {
                                                          "width": "auto",
                                                        }
                                                      }
                                                    >
                                                      <MenuItem
                                                        fitted="horizontally"
                                                        style={
                                                          Object {
                                                            "margin": 0,
                                                            "padding": 0,
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="horizontally fitted item"
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "margin": 0,
                                                              "padding": 0,
                                                            }
                                                          }
                                                        >
                                                          <img
                                                            alt="component icon"
                                                            src="assets/icons/bio-blocks-icon.svg"
                                                            style={
                                                              Object {
                                                                "height": "32px",
                                                                "padding": "2px",
                                                                "width": "32px",
                                                              }
                                                            }
                                                          />
                                                          Contact Map
                                                        </div>
                                                      </MenuItem>
                                                    </div>
                                                  </Menu>
                                                  <MenuItem
                                                    fitted="horizontally"
                                                    position="right"
                                                  >
                                                    <div
                                                      className="right horizontally fitted item"
                                                      onClick={[Function]}
                                                    >
                                                      <Menu
                                                        secondary={true}
                                                      >
                                                        <div
                                                          className="ui secondary menu"
                                                        >
                                                          <MenuItem
                                                            key="Contact Map-menu-item-0"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "flexDirection": "column",
                                                              }
                                                            }
                                                          >
                                                            <a
                                                              className="item"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "flexDirection": "column",
                                                                }
                                                              }
                                                            >
                                                              <Popup
                                                                closeOnPortalMouseLeave={false}
                                                                closeOnTriggerClick={true}
                                                                closeOnTriggerMouseLeave={false}
                                                                disabled={false}
                                                                eventsEnabled={true}
                                                                hoverable={false}
                                                                offset={0}
                                                                on={
                                                                  Array [
                                                                    "click",
                                                                    "hover",
                                                                  ]
                                                                }
                                                                openOnTriggerClick={true}
                                                                openOnTriggerFocus={false}
                                                                openOnTriggerMouseEnter={false}
                                                                pinned={false}
                                                                position="bottom left"
                                                                style={
                                                                  Object {
                                                                    "opacity": 0.85,
                                                                  }
                                                                }
                                                                trigger={
                                                                  <Icon
                                                                    as="i"
                                                                    fitted={true}
                                                                    name="filter"
                                                                  />
                                                                }
                                                                wide={true}
                                                              >
                                                                <Portal
                                                                  closeOnDocumentClick={true}
                                                                  closeOnEscape={true}
                                                                  closeOnPortalMouseLeave={false}
                                                                  closeOnTriggerClick={true}
                                                                  closeOnTriggerMouseLeave={false}
                                                                  eventPool="default"
                                                                  mouseEnterDelay={50}
                                                                  mouseLeaveDelay={70}
                                                                  onClose={[Function]}
                                                                  onMount={[Function]}
                                                                  onOpen={[Function]}
                                                                  onUnmount={[Function]}
                                                                  openOnTriggerClick={true}
                                                                  openOnTriggerFocus={false}
                                                                  openOnTriggerMouseEnter={false}
                                                                  trigger={
                                                                    <Icon
                                                                      as="i"
                                                                      fitted={true}
                                                                      name="filter"
                                                                    />
                                                                  }
                                                                  triggerRef={
                                                                    Object {
                                                                      "current": <i
                                                                        aria-hidden="true"
                                                                        class="filter fitted icon"
                                                                      />,
                                                                    }
                                                                  }
                                                                >
                                                                  <Ref
                                                                    innerRef={[Function]}
                                                                  >
                                                                    <RefFindNode
                                                                      innerRef={[Function]}
                                                                    >
                                                                      <Icon
                                                                        as="i"
                                                                        fitted={true}
                                                                        name="filter"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                      >
                                                                        <i
                                                                          aria-hidden="true"
                                                                          className="filter fitted icon"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onFocus={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                        />
                                                                      </Icon>
                                                                    </RefFindNode>
                                                                  </Ref>
                                                                </Portal>
                                                              </Popup>
                                                              <span
                                                                style={
                                                                  Object {
                                                                    "fontSize": "11px",
                                                                    "visibility": "hidden",
                                                                  }
                                                                }
                                                              >
                                                                Filter
                                                              </span>
                                                            </a>
                                                          </MenuItem>
                                                          <MenuItem
                                                            key="Contact Map-menu-item-1"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "flexDirection": "column",
                                                              }
                                                            }
                                                          >
                                                            <a
                                                              className="item"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "flexDirection": "column",
                                                                }
                                                              }
                                                            >
                                                              <Popup
                                                                closeOnPortalMouseLeave={false}
                                                                closeOnTriggerClick={true}
                                                                closeOnTriggerMouseLeave={false}
                                                                disabled={false}
                                                                eventsEnabled={true}
                                                                hoverable={false}
                                                                offset={0}
                                                                on={
                                                                  Array [
                                                                    "click",
                                                                    "hover",
                                                                  ]
                                                                }
                                                                openOnTriggerClick={true}
                                                                openOnTriggerFocus={false}
                                                                openOnTriggerMouseEnter={false}
                                                                pinned={false}
                                                                position="bottom left"
                                                                style={
                                                                  Object {
                                                                    "opacity": 0.85,
                                                                  }
                                                                }
                                                                trigger={
                                                                  <Icon
                                                                    as="i"
                                                                    fitted={true}
                                                                    name="setting"
                                                                  />
                                                                }
                                                                wide={true}
                                                              >
                                                                <Portal
                                                                  closeOnDocumentClick={true}
                                                                  closeOnEscape={true}
                                                                  closeOnPortalMouseLeave={false}
                                                                  closeOnTriggerClick={true}
                                                                  closeOnTriggerMouseLeave={false}
                                                                  eventPool="default"
                                                                  mouseEnterDelay={50}
                                                                  mouseLeaveDelay={70}
                                                                  onClose={[Function]}
                                                                  onMount={[Function]}
                                                                  onOpen={[Function]}
                                                                  onUnmount={[Function]}
                                                                  openOnTriggerClick={true}
                                                                  openOnTriggerFocus={false}
                                                                  openOnTriggerMouseEnter={false}
                                                                  trigger={
                                                                    <Icon
                                                                      as="i"
                                                                      fitted={true}
                                                                      name="setting"
                                                                    />
                                                                  }
                                                                  triggerRef={
                                                                    Object {
                                                                      "current": <i
                                                                        aria-hidden="true"
                                                                        class="setting fitted icon"
                                                                      />,
                                                                    }
                                                                  }
                                                                >
                                                                  <Ref
                                                                    innerRef={[Function]}
                                                                  >
                                                                    <RefFindNode
                                                                      innerRef={[Function]}
                                                                    >
                                                                      <Icon
                                                                        as="i"
                                                                        fitted={true}
                                                                        name="setting"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                      >
                                                                        <i
                                                                          aria-hidden="true"
                                                                          className="setting fitted icon"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onFocus={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                        />
                                                                      </Icon>
                                                                    </RefFindNode>
                                                                  </Ref>
                                                                </Portal>
                                                              </Popup>
                                                              <span
                                                                style={
                                                                  Object {
                                                                    "fontSize": "11px",
                                                                    "visibility": "hidden",
                                                                  }
                                                                }
                                                              >
                                                                Settings
                                                              </span>
                                                            </a>
                                                          </MenuItem>
                                                          <MenuItem
                                                            style={
                                                              Object {
                                                                "flexDirection": "column",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="item"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "flexDirection": "column",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                as="i"
                                                                name="expand arrows alternate"
                                                                onClick={[Function]}
                                                              >
                                                                <i
                                                                  aria-hidden="true"
                                                                  className="expand arrows alternate icon"
                                                                  onClick={[Function]}
                                                                />
                                                              </Icon>
                                                              <span
                                                                style={
                                                                  Object {
                                                                    "fontSize": "11px",
                                                                    "visibility": "hidden",
                                                                  }
                                                                }
                                                              >
                                                                Expand
                                                              </span>
                                                            </div>
                                                          </MenuItem>
                                                        </div>
                                                      </Menu>
                                                    </div>
                                                  </MenuItem>
                                                </div>
                                              </Menu>
                                            </div>
                                          </ComponentMenuBar>
                                        </div>
                                        <div
                                          style={
                                            Object {
                                              "height": "90%",
                                              "width": "100%",
                                            }
                                          }
                                        >
                                          <ContactMapChart
                                            candidateResidues={Array []}
                                            configurations={Array []}
                                            contactData={
                                              Array [
                                                Object {
                                                  "hoverinfo": "skip",
                                                  "marker": Object {
                                                    "colorscale": Array [
                                                      Array [
                                                        0,
                                                        "#0000ff",
                                                      ],
                                                      Array [
                                                        1,
                                                        "rgb(247,251,255)",
                                                      ],
                                                    ],
                                                  },
                                                  "mode": "lines+markers",
                                                  "name": "Structure Contact (Coupling Scores)",
                                                  "nodeSize": 4,
                                                  "points": Array [],
                                                  "subtitle": "Inferred Structure Contact",
                                                  "text": Array [],
                                                },
                                                Object {
                                                  "hoverinfo": "text",
                                                  "marker": Object {
                                                    "color": Array [],
                                                  },
                                                  "mode": "lines+markers",
                                                  "name": "Inferred Contact",
                                                  "nodeSize": 4,
                                                  "points": Array [],
                                                  "subtitle": "(N=0, L=1)",
                                                  "text": Array [],
                                                },
                                                Object {
                                                  "hoverinfo": "text",
                                                  "marker": Object {
                                                    "color": Array [],
                                                  },
                                                  "mode": "lines+markers",
                                                  "name": "Inferred Contact Agrees with PDB Contact",
                                                  "nodeSize": 6,
                                                  "points": Array [],
                                                  "subtitle": "(N=0, NaN%)",
                                                  "text": Array [],
                                                },
                                                Object {
                                                  "hoverinfo": "none",
                                                  "marker": Object {
                                                    "color": Array [],
                                                    "line": Object {
                                                      "color": "#ff8800",
                                                      "width": 3,
                                                    },
                                                    "symbol": "circle-open",
                                                  },
                                                  "mode": "lines+markers",
                                                  "name": "Selected Residue Pair",
                                                  "nodeSize": 4,
                                                  "points": Array [],
                                                  "subtitle": "",
                                                },
                                              ]
                                            }
                                            dataTransformFn={[Function]}
                                            height="100%"
                                            isDataLoading={false}
                                            legendModifiers={
                                              Object {
                                                "y": -0.4,
                                              }
                                            }
                                            marginModifiers={
                                              Object {
                                                "b": 67,
                                                "l": 67,
                                              }
                                            }
                                            onClickCallback={[Function]}
                                            onHoverCallback={[Function]}
                                            onSelectedCallback={[Function]}
                                            onUnHoverCallback={[Function]}
                                            range={33000}
                                            secondaryStructures={Array []}
                                            selectedSecondaryStructures={
                                              Array [
                                                Array [],
                                              ]
                                            }
                                            selectedSecondaryStructuresColor="#feb83f"
                                            showConfigurations={true}
                                            width="100%"
                                          >
                                            <PlotlyChart
                                              candidateResidues={Array []}
                                              config={Object {}}
                                              data={
                                                Array [
                                                  Object {
                                                    "hoverinfo": "skip",
                                                    "marker": Object {
                                                      "color": Array [],
                                                      "colorscale": Array [
                                                        Array [
                                                          0,
                                                          "#0000ff",
                                                        ],
                                                        Array [
                                                          1,
                                                          "rgb(247,251,255)",
                                                        ],
                                                      ],
                                                      "size": 4,
                                                    },
                                                    "mode": "markers",
                                                    "name": "Structure Contact (Coupling Scores) Inferred Structure Contact",
                                                    "text": Array [],
                                                    "type": "scattergl",
                                                    "x": Array [],
                                                    "y": Array [],
                                                    "z": Array [],
                                                  },
                                                  Object {
                                                    "hoverinfo": "text",
                                                    "marker": Object {
                                                      "color": Array [],
                                                      "size": 4,
                                                    },
                                                    "mode": "markers",
                                                    "name": "Inferred Contact (N=0, L=1)",
                                                    "text": Array [],
                                                    "type": "scattergl",
                                                    "x": Array [],
                                                    "y": Array [],
                                                    "z": Array [],
                                                  },
                                                  Object {
                                                    "hoverinfo": "text",
                                                    "marker": Object {
                                                      "color": Array [],
                                                      "size": 6,
                                                    },
                                                    "mode": "markers",
                                                    "name": "Inferred Contact Agrees with PDB Contact (N=0, NaN%)",
                                                    "text": Array [],
                                                    "type": "scattergl",
                                                    "x": Array [],
                                                    "y": Array [],
                                                    "z": Array [],
                                                  },
                                                  Object {
                                                    "hoverinfo": "none",
                                                    "marker": Object {
                                                      "color": Array [],
                                                      "line": Object {
                                                        "color": "#ff8800",
                                                        "width": 3,
                                                      },
                                                      "size": 4,
                                                      "symbol": "circle-open",
                                                    },
                                                    "mode": "markers",
                                                    "name": "Selected Residue Pair ",
                                                    "text": Array [],
                                                    "type": "scattergl",
                                                    "x": Array [],
                                                    "y": Array [],
                                                    "z": Array [],
                                                  },
                                                ]
                                              }
                                              dataTransformFn={[Function]}
                                              height="100%"
                                              layout={
                                                Object {
                                                  "legend": Object {
                                                    "orientation": "h",
                                                    "y": -0.4,
                                                    "yanchor": "bottom",
                                                  },
                                                  "margin": Object {
                                                    "b": 67,
                                                    "l": 67,
                                                  },
                                                  "showlegend": false,
                                                  "xaxis": Object {
                                                    "fixedrange": true,
                                                    "nticks": 10,
                                                    "range": Array [
                                                      0,
                                                      33000,
                                                    ],
                                                    "rangemode": "nonnegative",
                                                    "showline": true,
                                                    "tickmode": "auto",
                                                    "title": "Residue #",
                                                  },
                                                  "yaxis": Object {
                                                    "fixedrange": true,
                                                    "nticks": 10,
                                                    "range": Array [
                                                      33000,
                                                      0,
                                                    ],
                                                    "rangemode": "nonnegative",
                                                    "showline": true,
                                                    "tickmode": "auto",
                                                    "title": "Residue #",
                                                  },
                                                }
                                              }
                                              onClickCallback={[Function]}
                                              onHoverCallback={[Function]}
                                              onSelectedCallback={[Function]}
                                              onUnHoverCallback={[Function]}
                                              secondaryStructures={Array []}
                                              selectedSecondaryStructures={
                                                Array [
                                                  Array [],
                                                ]
                                              }
                                              selectedSecondaryStructuresColor="#feb83f"
                                              showLoader={false}
                                              width="100%"
                                            >
                                              <div
                                                className="plotly-chart"
                                                style={
                                                  Object {
                                                    "height": "100%",
                                                    "marginBottom": 5,
                                                    "width": "100%",
                                                  }
                                                }
                                              />
                                            </PlotlyChart>
                                          </ContactMapChart>
                                        </div>
                                        <div
                                          style={
                                            Object {
                                              "height": "3%",
                                            }
                                          }
                                        >
                                          <ComponentDock
                                            dockItems={
                                              Array [
                                                Object {
                                                  "isVisibleCb": [Function],
                                                  "onClick": [Function],
                                                  "text": "Clear Selections",
                                                },
                                              ]
                                            }
                                            visible={false}
                                          />
                                        </div>
                                      </div>
                                    </Card>
                                  </ComponentCard>
                                </ContactMapClass>
                              </Connect(ContactMapClass)>
                            </div>
                          </Provider>
                        </PredictedContactMap>
                      </div>
                    </GridColumn>
                    <GridColumn
                      width={7}
                    >
                      <div
                        className="seven wide column"
                      >
                        <Connect(NGLContainerClass)
                          experimentalProteins={Array []}
                          isDataLoading={false}
                          measuredProximity="CLOSEST ATOM"
                          onMeasuredProximityChange={[Function]}
                          predictedProteins={Array []}
                        >
                          <NGLContainerClass
                            addCandidateResidues={[Function]}
                            addHoveredResidues={[Function]}
                            addLockedResiduePair={[Function]}
                            candidateResidues={Array []}
                            dispatchNglFetch={[Function]}
                            experimentalProteins={Array []}
                            hoveredResidues={Array []}
                            hoveredSecondaryStructures={Array []}
                            isDataLoading={false}
                            lockedResiduePairs={Immutable.Map {}}
                            maxPDBPerPopup={5}
                            measuredProximity="CLOSEST ATOM"
                            onMeasuredProximityChange={[Function]}
                            predictedProteins={Array []}
                            removeAllLockedResiduePairs={[Function]}
                            removeAllSelectedSecondaryStructures={[Function]}
                            removeCandidateResidues={[Function]}
                            removeHoveredResidues={[Function]}
                            removeLockedResiduePair={[Function]}
                            removeNonLockedResidues={[Function]}
                            selectedSecondaryStructures={Array []}
                            showConfigurations={true}
                          >
                            <Provider
                              store={
                                Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                }
                              }
                            >
                              <Grid
                                padded={true}
                              >
                                <div
                                  className="ui padded grid"
                                >
                                  <GridRow>
                                    <div
                                      className="row"
                                    >
                                      <NGLComponent
                                        addCandidateResidues={[Function]}
                                        addHoveredResidues={[Function]}
                                        addLockedResiduePair={[Function]}
                                        backgroundColor="#ffffff"
                                        candidateResidues={Array []}
                                        dispatchNglFetch={[Function]}
                                        experimentalProteins={Array []}
                                        height="92%"
                                        hoveredResidues={Array []}
                                        hoveredSecondaryStructures={Array []}
                                        isDataLoading={false}
                                        lockedResiduePairs={Object {}}
                                        maxPDBPerPopup={5}
                                        measuredProximity="CLOSEST ATOM"
                                        menuItems={
                                          Array [
                                            Object {
                                              "component": Object {
                                                "name": "POPUP",
                                                "props": Object {
                                                  "children": <Grid
                                                    divided={true}
                                                    padded={true}
                                                  >
                                                    <GridRow>
                                                      <GridColumn>
                                                        <Header>
                                                          Select Structures to Display
                                                        </Header>
                                                      </GridColumn>
                                                    </GridRow>
                                                    <GridRow
                                                      columns={2}
                                                      style={
                                                        Object {
                                                          "padding": "5px 0",
                                                        }
                                                      }
                                                    >
                                                      <GridColumn
                                                        width={9}
                                                      >
                                                        Experimental (0/0)
                                                        <div
                                                          style={
                                                            Object {
                                                              "height": "250px",
                                                              "overflow": "auto",
                                                            }
                                                          }
                                                        >
                                                          <Table
                                                            as="table"
                                                            basic="very"
                                                            compact={true}
                                                            padded={true}
                                                          >
                                                            <TableHeader
                                                              as="thead"
                                                            >
                                                              <TableRow
                                                                as="tr"
                                                                cellAs="td"
                                                              >
                                                                <TableHeaderCell
                                                                  as="th"
                                                                  style={
                                                                    Object {
                                                                      "padding": "5px 0",
                                                                    }
                                                                  }
                                                                >
                                                                  Name
                                                                </TableHeaderCell>
                                                                <TableHeaderCell
                                                                  as="th"
                                                                  style={
                                                                    Object {
                                                                      "padding": "5px 0",
                                                                    }
                                                                  }
                                                                >
                                                                  Seq. ID
                                                                </TableHeaderCell>
                                                                <TableHeaderCell
                                                                  as="th"
                                                                  style={
                                                                    Object {
                                                                      "padding": "5px 0",
                                                                    }
                                                                  }
                                                                >
                                                                  Source
                                                                </TableHeaderCell>
                                                              </TableRow>
                                                            </TableHeader>
                                                            <TableBody
                                                              as="tbody"
                                                            />
                                                          </Table>
                                                        </div>
                                                      </GridColumn>
                                                      <GridColumn
                                                        width={7}
                                                      >
                                                        Predicted (0/0)
                                                        <div
                                                          style={
                                                            Object {
                                                              "height": "250px",
                                                              "overflow": "auto",
                                                            }
                                                          }
                                                        >
                                                          <Table
                                                            as="table"
                                                            basic="very"
                                                            compact={true}
                                                            padded={true}
                                                          >
                                                            <TableHeader
                                                              as="thead"
                                                            >
                                                              <TableRow
                                                                as="tr"
                                                                cellAs="td"
                                                              >
                                                                <TableHeaderCell
                                                                  as="th"
                                                                  style={
                                                                    Object {
                                                                      "padding": "5px 0",
                                                                    }
                                                                  }
                                                                >
                                                                  Name
                                                                </TableHeaderCell>
                                                                <TableHeaderCell
                                                                  as="th"
                                                                  style={
                                                                    Object {
                                                                      "padding": "5px 0",
                                                                    }
                                                                  }
                                                                >
                                                                  Rank
                                                                </TableHeaderCell>
                                                              </TableRow>
                                                            </TableHeader>
                                                            <TableBody
                                                              as="tbody"
                                                            />
                                                          </Table>
                                                        </div>
                                                      </GridColumn>
                                                    </GridRow>
                                                  </Grid>,
                                                  "disabled": true,
                                                  "position": "top center",
                                                  "wide": "very",
                                                },
                                              },
                                              "description": "PDB Selector",
                                              "iconName": "tasks",
                                            },
                                          ]
                                        }
                                        onMeasuredProximityChange={[Function]}
                                        onResize={[Function]}
                                        predictedProteins={Array []}
                                        removeAllLockedResiduePairs={[Function]}
                                        removeAllSelectedSecondaryStructures={[Function]}
                                        removeCandidateResidues={[Function]}
                                        removeHoveredResidues={[Function]}
                                        removeLockedResiduePair={[Function]}
                                        removeNonLockedResidues={[Function]}
                                        selectedSecondaryStructures={Array []}
                                        showConfigurations={true}
                                        width="100%"
                                      >
                                        <ComponentCard
                                          componentName="NGL Viewer"
                                          dockItems={
                                            Array [
                                              Object {
                                                "isVisibleCb": [Function],
                                                "onClick": [Function],
                                                "text": "Clear Selections",
                                              },
                                              Object {
                                                "onClick": [Function],
                                                "text": "Center View",
                                              },
                                              Object {
                                                "isVisibleCb": [Function],
                                                "onClick": [Function],
                                                "text": "Superimpose: Off",
                                              },
                                              Object {
                                                "onClick": [Function],
                                                "text": "Enable Stereo",
                                              },
                                            ]
                                          }
                                          expandedStyle={
                                            Object {
                                              "height": "85vh",
                                              "width": "85vh",
                                            }
                                          }
                                          frameHeight={0}
                                          frameWidth={0}
                                          headerHeight={20}
                                          height="525px"
                                          iconSrc="assets/icons/bio-blocks-icon.svg"
                                          isDataReady={false}
                                          isFramedComponent={false}
                                          isFullPage={false}
                                          menuItems={
                                            Array [
                                              Object {
                                                "component": Object {
                                                  "name": "POPUP",
                                                  "props": Object {
                                                    "children": <Grid
                                                      divided={true}
                                                      padded={true}
                                                    >
                                                      <GridRow>
                                                        <GridColumn>
                                                          <Header>
                                                            Select Structures to Display
                                                          </Header>
                                                        </GridColumn>
                                                      </GridRow>
                                                      <GridRow
                                                        columns={2}
                                                        style={
                                                          Object {
                                                            "padding": "5px 0",
                                                          }
                                                        }
                                                      >
                                                        <GridColumn
                                                          width={9}
                                                        >
                                                          Experimental (0/0)
                                                          <div
                                                            style={
                                                              Object {
                                                                "height": "250px",
                                                                "overflow": "auto",
                                                              }
                                                            }
                                                          >
                                                            <Table
                                                              as="table"
                                                              basic="very"
                                                              compact={true}
                                                              padded={true}
                                                            >
                                                              <TableHeader
                                                                as="thead"
                                                              >
                                                                <TableRow
                                                                  as="tr"
                                                                  cellAs="td"
                                                                >
                                                                  <TableHeaderCell
                                                                    as="th"
                                                                    style={
                                                                      Object {
                                                                        "padding": "5px 0",
                                                                      }
                                                                    }
                                                                  >
                                                                    Name
                                                                  </TableHeaderCell>
                                                                  <TableHeaderCell
                                                                    as="th"
                                                                    style={
                                                                      Object {
                                                                        "padding": "5px 0",
                                                                      }
                                                                    }
                                                                  >
                                                                    Seq. ID
                                                                  </TableHeaderCell>
                                                                  <TableHeaderCell
                                                                    as="th"
                                                                    style={
                                                                      Object {
                                                                        "padding": "5px 0",
                                                                      }
                                                                    }
                                                                  >
                                                                    Source
                                                                  </TableHeaderCell>
                                                                </TableRow>
                                                              </TableHeader>
                                                              <TableBody
                                                                as="tbody"
                                                              />
                                                            </Table>
                                                          </div>
                                                        </GridColumn>
                                                        <GridColumn
                                                          width={7}
                                                        >
                                                          Predicted (0/0)
                                                          <div
                                                            style={
                                                              Object {
                                                                "height": "250px",
                                                                "overflow": "auto",
                                                              }
                                                            }
                                                          >
                                                            <Table
                                                              as="table"
                                                              basic="very"
                                                              compact={true}
                                                              padded={true}
                                                            >
                                                              <TableHeader
                                                                as="thead"
                                                              >
                                                                <TableRow
                                                                  as="tr"
                                                                  cellAs="td"
                                                                >
                                                                  <TableHeaderCell
                                                                    as="th"
                                                                    style={
                                                                      Object {
                                                                        "padding": "5px 0",
                                                                      }
                                                                    }
                                                                  >
                                                                    Name
                                                                  </TableHeaderCell>
                                                                  <TableHeaderCell
                                                                    as="th"
                                                                    style={
                                                                      Object {
                                                                        "padding": "5px 0",
                                                                      }
                                                                    }
                                                                  >
                                                                    Rank
                                                                  </TableHeaderCell>
                                                                </TableRow>
                                                              </TableHeader>
                                                              <TableBody
                                                                as="tbody"
                                                              />
                                                            </Table>
                                                          </div>
                                                        </GridColumn>
                                                      </GridRow>
                                                    </Grid>,
                                                    "disabled": true,
                                                    "position": "top center",
                                                    "wide": "very",
                                                  },
                                                },
                                                "description": "PDB Selector",
                                                "iconName": "tasks",
                                              },
                                              Object {
                                                "component": Object {
                                                  "configs": Object {
                                                    "Structure Representations": Array [
                                                      Object {
                                                        "current": "Cartoon",
                                                        "name": "Predicted Structure Representation",
                                                        "onChange": [Function],
                                                        "options": Array [
                                                          "Rainbow",
                                                          "Spacefill",
                                                          "Backbone",
                                                          "Cartoon",
                                                          "Surface",
                                                          "Tube",
                                                        ],
                                                        "type": "RADIO",
                                                      },
                                                      Object {
                                                        "current": "Default",
                                                        "name": "Experimental Structure Representation",
                                                        "onChange": [Function],
                                                        "options": Array [
                                                          "Rainbow",
                                                          "Spacefill",
                                                          "Backbone",
                                                          "Cartoon",
                                                          "Surface",
                                                          "Tube",
                                                        ],
                                                        "type": "RADIO",
                                                      },
                                                    ],
                                                    "View Options": Array [
                                                      Object {
                                                        "checked": false,
                                                        "name": "Zoom on Click",
                                                        "onChange": [Function],
                                                        "type": "CHECKBOX",
                                                      },
                                                      Object {
                                                        "checked": true,
                                                        "name": "Display Distance in Ångström",
                                                        "onChange": [Function],
                                                        "type": "CHECKBOX",
                                                      },
                                                      Object {
                                                        "current": "CLOSEST ATOM",
                                                        "name": "Proximity Metric",
                                                        "onChange": [Function],
                                                        "options": Array [
                                                          "Closest Atom",
                                                          "C-α",
                                                        ],
                                                        "type": "RADIO",
                                                      },
                                                    ],
                                                  },
                                                  "name": "POPUP",
                                                  "props": Object {
                                                    "trigger": <Icon
                                                      as="i"
                                                      name="setting"
                                                    />,
                                                  },
                                                },
                                                "description": "Settings",
                                              },
                                            ]
                                          }
                                          padding={0}
                                          showSettings={false}
                                          width="525px"
                                        >
                                          <Card
                                            centered={true}
                                            className="bioblocks-component-card"
                                            style={
                                              Object {
                                                "height": "530.25px",
                                                "maxWidth": "unset",
                                                "padding": "0 0 0 5px",
                                                "width": "525px",
                                              }
                                            }
                                          >
                                            <div
                                              className="ui centered card bioblocks-component-card"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "height": "530.25px",
                                                  "maxWidth": "unset",
                                                  "padding": "0 0 0 5px",
                                                  "width": "525px",
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": "7%",
                                                  }
                                                }
                                              >
                                                <ComponentMenuBar
                                                  componentName="NGL Viewer"
                                                  height={20}
                                                  iconSrc="assets/icons/bio-blocks-icon.svg"
                                                  isExpanded={false}
                                                  menuItems={
                                                    Array [
                                                      Object {
                                                        "component": Object {
                                                          "name": "POPUP",
                                                          "props": Object {
                                                            "children": <Grid
                                                              divided={true}
                                                              padded={true}
                                                            >
                                                              <GridRow>
                                                                <GridColumn>
                                                                  <Header>
                                                                    Select Structures to Display
                                                                  </Header>
                                                                </GridColumn>
                                                              </GridRow>
                                                              <GridRow
                                                                columns={2}
                                                                style={
                                                                  Object {
                                                                    "padding": "5px 0",
                                                                  }
                                                                }
                                                              >
                                                                <GridColumn
                                                                  width={9}
                                                                >
                                                                  Experimental (0/0)
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "height": "250px",
                                                                        "overflow": "auto",
                                                                      }
                                                                    }
                                                                  >
                                                                    <Table
                                                                      as="table"
                                                                      basic="very"
                                                                      compact={true}
                                                                      padded={true}
                                                                    >
                                                                      <TableHeader
                                                                        as="thead"
                                                                      >
                                                                        <TableRow
                                                                          as="tr"
                                                                          cellAs="td"
                                                                        >
                                                                          <TableHeaderCell
                                                                            as="th"
                                                                            style={
                                                                              Object {
                                                                                "padding": "5px 0",
                                                                              }
                                                                            }
                                                                          >
                                                                            Name
                                                                          </TableHeaderCell>
                                                                          <TableHeaderCell
                                                                            as="th"
                                                                            style={
                                                                              Object {
                                                                                "padding": "5px 0",
                                                                              }
                                                                            }
                                                                          >
                                                                            Seq. ID
                                                                          </TableHeaderCell>
                                                                          <TableHeaderCell
                                                                            as="th"
                                                                            style={
                                                                              Object {
                                                                                "padding": "5px 0",
                                                                              }
                                                                            }
                                                                          >
                                                                            Source
                                                                          </TableHeaderCell>
                                                                        </TableRow>
                                                                      </TableHeader>
                                                                      <TableBody
                                                                        as="tbody"
                                                                      />
                                                                    </Table>
                                                                  </div>
                                                                </GridColumn>
                                                                <GridColumn
                                                                  width={7}
                                                                >
                                                                  Predicted (0/0)
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "height": "250px",
                                                                        "overflow": "auto",
                                                                      }
                                                                    }
                                                                  >
                                                                    <Table
                                                                      as="table"
                                                                      basic="very"
                                                                      compact={true}
                                                                      padded={true}
                                                                    >
                                                                      <TableHeader
                                                                        as="thead"
                                                                      >
                                                                        <TableRow
                                                                          as="tr"
                                                                          cellAs="td"
                                                                        >
                                                                          <TableHeaderCell
                                                                            as="th"
                                                                            style={
                                                                              Object {
                                                                                "padding": "5px 0",
                                                                              }
                                                                            }
                                                                          >
                                                                            Name
                                                                          </TableHeaderCell>
                                                                          <TableHeaderCell
                                                                            as="th"
                                                                            style={
                                                                              Object {
                                                                                "padding": "5px 0",
                                                                              }
                                                                            }
                                                                          >
                                                                            Rank
                                                                          </TableHeaderCell>
                                                                        </TableRow>
                                                                      </TableHeader>
                                                                      <TableBody
                                                                        as="tbody"
                                                                      />
                                                                    </Table>
                                                                  </div>
                                                                </GridColumn>
                                                              </GridRow>
                                                            </Grid>,
                                                            "disabled": true,
                                                            "position": "top center",
                                                            "wide": "very",
                                                          },
                                                        },
                                                        "description": "PDB Selector",
                                                        "iconName": "tasks",
                                                      },
                                                      Object {
                                                        "component": Object {
                                                          "configs": Object {
                                                            "Structure Representations": Array [
                                                              Object {
                                                                "current": "Cartoon",
                                                                "name": "Predicted Structure Representation",
                                                                "onChange": [Function],
                                                                "options": Array [
                                                                  "Rainbow",
                                                                  "Spacefill",
                                                                  "Backbone",
                                                                  "Cartoon",
                                                                  "Surface",
                                                                  "Tube",
                                                                ],
                                                                "type": "RADIO",
                                                              },
                                                              Object {
                                                                "current": "Default",
                                                                "name": "Experimental Structure Representation",
                                                                "onChange": [Function],
                                                                "options": Array [
                                                                  "Rainbow",
                                                                  "Spacefill",
                                                                  "Backbone",
                                                                  "Cartoon",
                                                                  "Surface",
                                                                  "Tube",
                                                                ],
                                                                "type": "RADIO",
                                                              },
                                                            ],
                                                            "View Options": Array [
                                                              Object {
                                                                "checked": false,
                                                                "name": "Zoom on Click",
                                                                "onChange": [Function],
                                                                "type": "CHECKBOX",
                                                              },
                                                              Object {
                                                                "checked": true,
                                                                "name": "Display Distance in Ångström",
                                                                "onChange": [Function],
                                                                "type": "CHECKBOX",
                                                              },
                                                              Object {
                                                                "current": "CLOSEST ATOM",
                                                                "name": "Proximity Metric",
                                                                "onChange": [Function],
                                                                "options": Array [
                                                                  "Closest Atom",
                                                                  "C-α",
                                                                ],
                                                                "type": "RADIO",
                                                              },
                                                            ],
                                                          },
                                                          "name": "POPUP",
                                                          "props": Object {
                                                            "trigger": <Icon
                                                              as="i"
                                                              name="setting"
                                                            />,
                                                          },
                                                        },
                                                        "description": "Settings",
                                                      },
                                                    ]
                                                  }
                                                  onExpandToggleCb={[Function]}
                                                  opacity={0.85}
                                                  width="100%"
                                                >
                                                  <div
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <Menu
                                                      secondary={true}
                                                      style={
                                                        Object {
                                                          "height": 20,
                                                          "margin": 0,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ui secondary menu"
                                                        style={
                                                          Object {
                                                            "height": 20,
                                                            "margin": 0,
                                                          }
                                                        }
                                                      >
                                                        <Menu
                                                          fluid={false}
                                                          secondary={true}
                                                          style={
                                                            Object {
                                                              "width": "auto",
                                                            }
                                                          }
                                                          widths={6}
                                                        >
                                                          <div
                                                            className="ui secondary six item menu"
                                                            style={
                                                              Object {
                                                                "width": "auto",
                                                              }
                                                            }
                                                          >
                                                            <MenuItem
                                                              fitted="horizontally"
                                                              style={
                                                                Object {
                                                                  "margin": 0,
                                                                  "padding": 0,
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="horizontally fitted item"
                                                                onClick={[Function]}
                                                                style={
                                                                  Object {
                                                                    "margin": 0,
                                                                    "padding": 0,
                                                                  }
                                                                }
                                                              >
                                                                <img
                                                                  alt="component icon"
                                                                  src="assets/icons/bio-blocks-icon.svg"
                                                                  style={
                                                                    Object {
                                                                      "height": "32px",
                                                                      "padding": "2px",
                                                                      "width": "32px",
                                                                    }
                                                                  }
                                                                />
                                                                NGL Viewer
                                                              </div>
                                                            </MenuItem>
                                                          </div>
                                                        </Menu>
                                                        <MenuItem
                                                          fitted="horizontally"
                                                          position="right"
                                                        >
                                                          <div
                                                            className="right horizontally fitted item"
                                                            onClick={[Function]}
                                                          >
                                                            <Menu
                                                              secondary={true}
                                                            >
                                                              <div
                                                                className="ui secondary menu"
                                                              >
                                                                <MenuItem
                                                                  key="NGL Viewer-menu-item-0"
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "flexDirection": "column",
                                                                    }
                                                                  }
                                                                >
                                                                  <a
                                                                    className="item"
                                                                    onClick={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "flexDirection": "column",
                                                                      }
                                                                    }
                                                                  >
                                                                    <Popup
                                                                      closeOnPortalMouseLeave={false}
                                                                      closeOnTriggerClick={true}
                                                                      closeOnTriggerMouseLeave={false}
                                                                      disabled={true}
                                                                      eventsEnabled={true}
                                                                      hoverable={false}
                                                                      offset={0}
                                                                      on={
                                                                        Array [
                                                                          "click",
                                                                          "hover",
                                                                        ]
                                                                      }
                                                                      openOnTriggerClick={true}
                                                                      openOnTriggerFocus={false}
                                                                      openOnTriggerMouseEnter={false}
                                                                      pinned={false}
                                                                      position="top center"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0.85,
                                                                        }
                                                                      }
                                                                      trigger={
                                                                        <Icon
                                                                          as="i"
                                                                          fitted={true}
                                                                          name="tasks"
                                                                        />
                                                                      }
                                                                      wide="very"
                                                                    >
                                                                      <Icon
                                                                        as="i"
                                                                        fitted={true}
                                                                        name="tasks"
                                                                      >
                                                                        <i
                                                                          aria-hidden="true"
                                                                          className="tasks fitted icon"
                                                                          onClick={[Function]}
                                                                        />
                                                                      </Icon>
                                                                    </Popup>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "fontSize": "11px",
                                                                          "visibility": "hidden",
                                                                        }
                                                                      }
                                                                    >
                                                                      PDB Selector
                                                                    </span>
                                                                  </a>
                                                                </MenuItem>
                                                                <MenuItem
                                                                  key="NGL Viewer-menu-item-1"
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "flexDirection": "column",
                                                                    }
                                                                  }
                                                                >
                                                                  <a
                                                                    className="item"
                                                                    onClick={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "flexDirection": "column",
                                                                      }
                                                                    }
                                                                  >
                                                                    <Popup
                                                                      closeOnPortalMouseLeave={false}
                                                                      closeOnTriggerClick={true}
                                                                      closeOnTriggerMouseLeave={false}
                                                                      disabled={false}
                                                                      eventsEnabled={true}
                                                                      hoverable={false}
                                                                      offset={0}
                                                                      on={
                                                                        Array [
                                                                          "click",
                                                                          "hover",
                                                                        ]
                                                                      }
                                                                      openOnTriggerClick={true}
                                                                      openOnTriggerFocus={false}
                                                                      openOnTriggerMouseEnter={false}
                                                                      pinned={false}
                                                                      position="bottom left"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0.85,
                                                                        }
                                                                      }
                                                                      trigger={
                                                                        <Icon
                                                                          as="i"
                                                                          name="setting"
                                                                        />
                                                                      }
                                                                      wide={true}
                                                                    >
                                                                      <Portal
                                                                        closeOnDocumentClick={true}
                                                                        closeOnEscape={true}
                                                                        closeOnPortalMouseLeave={false}
                                                                        closeOnTriggerClick={true}
                                                                        closeOnTriggerMouseLeave={false}
                                                                        eventPool="default"
                                                                        mouseEnterDelay={50}
                                                                        mouseLeaveDelay={70}
                                                                        onClose={[Function]}
                                                                        onMount={[Function]}
                                                                        onOpen={[Function]}
                                                                        onUnmount={[Function]}
                                                                        openOnTriggerClick={true}
                                                                        openOnTriggerFocus={false}
                                                                        openOnTriggerMouseEnter={false}
                                                                        trigger={
                                                                          <Icon
                                                                            as="i"
                                                                            name="setting"
                                                                          />
                                                                        }
                                                                        triggerRef={
                                                                          Object {
                                                                            "current": <i
                                                                              aria-hidden="true"
                                                                              class="setting icon"
                                                                            />,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Ref
                                                                          innerRef={[Function]}
                                                                        >
                                                                          <RefFindNode
                                                                            innerRef={[Function]}
                                                                          >
                                                                            <Icon
                                                                              as="i"
                                                                              name="setting"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onFocus={[Function]}
                                                                              onMouseEnter={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                            >
                                                                              <i
                                                                                aria-hidden="true"
                                                                                className="setting icon"
                                                                                onBlur={[Function]}
                                                                                onClick={[Function]}
                                                                                onFocus={[Function]}
                                                                                onMouseEnter={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                              />
                                                                            </Icon>
                                                                          </RefFindNode>
                                                                        </Ref>
                                                                      </Portal>
                                                                    </Popup>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "fontSize": "11px",
                                                                          "visibility": "hidden",
                                                                        }
                                                                      }
                                                                    >
                                                                      Settings
                                                                    </span>
                                                                  </a>
                                                                </MenuItem>
                                                                <MenuItem
                                                                  style={
                                                                    Object {
                                                                      "flexDirection": "column",
                                                                    }
                                                                  }
                                                                >
                                                                  <div
                                                                    className="item"
                                                                    onClick={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "flexDirection": "column",
                                                                      }
                                                                    }
                                                                  >
                                                                    <Icon
                                                                      as="i"
                                                                      name="expand arrows alternate"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <i
                                                                        aria-hidden="true"
                                                                        className="expand arrows alternate icon"
                                                                        onClick={[Function]}
                                                                      />
                                                                    </Icon>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "fontSize": "11px",
                                                                          "visibility": "hidden",
                                                                        }
                                                                      }
                                                                    >
                                                                      Expand
                                                                    </span>
                                                                  </div>
                                                                </MenuItem>
                                                              </div>
                                                            </Menu>
                                                          </div>
                                                        </MenuItem>
                                                      </div>
                                                    </Menu>
                                                  </div>
                                                </ComponentMenuBar>
                                              </div>
                                              <div
                                                style={
                                                  Object {
                                                    "height": "90%",
                                                    "width": "100%",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="NGLComponent"
                                                  style={
                                                    Object {
                                                      "height": "92%",
                                                      "width": "100%",
                                                    }
                                                  }
                                                >
                                                  <Dimmer
                                                    active={false}
                                                  >
                                                    <DimmerInner
                                                      active={false}
                                                    >
                                                      <Ref
                                                        innerRef={
                                                          Object {
                                                            "current": <div
                                                              class="ui dimmer"
                                                            >
                                                              <div
                                                                class="content"
                                                              >
                                                                <div
                                                                  class="ui loader"
                                                                />
                                                              </div>
                                                            </div>,
                                                          }
                                                        }
                                                      >
                                                        <RefFindNode
                                                          innerRef={
                                                            Object {
                                                              "current": <div
                                                                class="ui dimmer"
                                                              >
                                                                <div
                                                                  class="content"
                                                                >
                                                                  <div
                                                                    class="ui loader"
                                                                  />
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="ui dimmer"
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="content"
                                                            >
                                                              <Loader>
                                                                <div
                                                                  className="ui loader"
                                                                />
                                                              </Loader>
                                                            </div>
                                                          </div>
                                                        </RefFindNode>
                                                      </Ref>
                                                    </DimmerInner>
                                                  </Dimmer>
                                                  <div
                                                    className="NGLCanvas"
                                                    onKeyDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "height": "100%",
                                                        "width": "100%",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </div>
                                              <div
                                                style={
                                                  Object {
                                                    "height": "3%",
                                                  }
                                                }
                                              >
                                                <ComponentDock
                                                  dockItems={
                                                    Array [
                                                      Object {
                                                        "isVisibleCb": [Function],
                                                        "onClick": [Function],
                                                        "text": "Clear Selections",
                                                      },
                                                      Object {
                                                        "onClick": [Function],
                                                        "text": "Center View",
                                                      },
                                                      Object {
                                                        "isVisibleCb": [Function],
                                                        "onClick": [Function],
                                                        "text": "Superimpose: Off",
                                                      },
                                                      Object {
                                                        "onClick": [Function],
                                                        "text": "Enable Stereo",
                                                      },
                                                    ]
                                                  }
                                                  visible={false}
                                                />
                                              </div>
                                            </div>
                                          </Card>
                                        </ComponentCard>
                                      </NGLComponent>
                                    </div>
                                  </GridRow>
                                </div>
                              </Grid>
                            </Provider>
                          </NGLContainerClass>
                        </Connect(NGLContainerClass)>
                      </div>
                    </GridColumn>
                  </div>
                </GridRow>
              </div>
            </Grid>
          </div>
        </Segment>
        <footer
          style={
            Object {
              "padding": "25vh 0 25px 25px",
            }
          }
        >
          Powered by 
          <a
            href="https://github.com/cBioCenter/bioblocks-viz"
          >
            Bioblocks
          </a>
          !
        </footer>
      </div>
    </VisualizationPageClass>
  </Connect(VisualizationPageClass)>
</Provider>
`;

exports[`VisualizationPage Should match existing snapshot when no props are provided. 1`] = `
<div
  id="BioblocksVizApp"
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": "1000px",
    }
  }
>
  <Modal
    centered={true}
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    closeOnEscape={true}
    closeOnPortalMouseLeave={true}
    dimmer={true}
    eventPool="Modal"
    onClose={[Function]}
    open={false}
    size="fullscreen"
  >
    <FolderUploadComponent
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "lightblue",
          "border": "7px dashed blue",
          "height": "90vmin",
          "textAlign": "center",
        }
      }
    />
  </Modal>
  <ErrorMessageComponent
    couplingScores={
      CouplingContainer {
        "colCounter": 0,
        "contacts": Array [],
        "derivedFromCouplingScoresFlag": true,
        "getCouplingScore": [Function],
        "includes": [Function],
        "indexRange": Object {
          "max": 1,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 0,
      }
    }
    errorMsg=""
    mismatches={Array []}
  />
  <Message>
    To get started, please drag and drop onto the page either:
    <br />
    (1) An evcouplings results directory.
    <br />
    (2) Individual .pdb, coupling scores
    <Popup
      content="A file that ends as 'CouplingScores.csv'"
      disabled={false}
      offset={0}
      on="hover"
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    , and residue mapping files
    <Popup
      content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
      disabled={false}
      offset={0}
      on="hover"
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    .
    <br />
    <br />
     Check out the
    <a
      href="http://evfold.org"
    >
       EVFold
    </a>
     or
    <a
      href="https://evcouplings.org/"
    >
       EVCouplings 
    </a>
     website to get these files.
  </Message>
  <Segment
    attached={true}
    raised={true}
  >
    <Grid
      centered={true}
      padded={true}
      relaxed={true}
    >
      <GridRow
        textAlign="right"
        verticalAlign="bottom"
      >
        <GridColumn
          style={
            Object {
              "height": "100%",
              "width": "auto",
            }
          }
        >
          <Button
            as="button"
            icon="trash"
            label={
              Object {
                "content": "Clean View",
              }
            }
            labelPosition="right"
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </GridColumn>
      </GridRow>
      <GridRow>
        <br />
      </GridRow>
      <GridRow
        columns={2}
        verticalAlign="bottom"
      >
        <GridColumn
          width={7}
        >
          <PredictedContactMap
            agreementColor="#ff0000"
            allColor="#000000"
            data={
              Object {
                "couplingScores": CouplingContainer {
                  "colCounter": 0,
                  "contacts": Array [],
                  "derivedFromCouplingScoresFlag": true,
                  "getCouplingScore": [Function],
                  "includes": [Function],
                  "indexRange": Object {
                    "max": 1,
                    "min": 1,
                  },
                  "rowCounter": 0,
                  "scoreSource": "cn",
                  "totalStoredContacts": 0,
                },
                "pdbData": Object {
                  "experimental": undefined,
                },
                "secondaryStructures": Array [],
              }
            }
            filters={Array []}
            height="100%"
            highlightColor="#ff8800"
            isDataLoading={false}
            observedColor="#0000ff"
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
            width="100%"
          />
        </GridColumn>
        <GridColumn
          width={7}
        >
          <Connect(NGLContainerClass)
            experimentalProteins={Array []}
            isDataLoading={false}
            measuredProximity="CLOSEST ATOM"
            onMeasuredProximityChange={[Function]}
            predictedProteins={Array []}
          />
        </GridColumn>
      </GridRow>
    </Grid>
  </Segment>
  <footer
    style={
      Object {
        "padding": "25vh 0 25px 25px",
      }
    }
  >
    Powered by 
    <a
      href="https://github.com/cBioCenter/bioblocks-viz"
    >
      Bioblocks
    </a>
    !
  </footer>
</div>
`;

exports[`VisualizationPage Should match existing snapshot when using c-alpha proximity. 1`] = `
<div
  id="BioblocksVizApp"
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": "1000px",
    }
  }
>
  <Modal
    centered={true}
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    closeOnEscape={true}
    closeOnPortalMouseLeave={true}
    dimmer={true}
    eventPool="Modal"
    onClose={[Function]}
    open={false}
    size="fullscreen"
  >
    <FolderUploadComponent
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "lightblue",
          "border": "7px dashed blue",
          "height": "90vmin",
          "textAlign": "center",
        }
      }
    />
  </Modal>
  <ErrorMessageComponent
    couplingScores={
      CouplingContainer {
        "colCounter": 0,
        "contacts": Array [],
        "derivedFromCouplingScoresFlag": true,
        "getCouplingScore": [Function],
        "includes": [Function],
        "indexRange": Object {
          "max": 1,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 0,
      }
    }
    errorMsg=""
    mismatches={Array []}
  />
  <Message>
    To get started, please drag and drop onto the page either:
    <br />
    (1) An evcouplings results directory.
    <br />
    (2) Individual .pdb, coupling scores
    <Popup
      content="A file that ends as 'CouplingScores.csv'"
      disabled={false}
      offset={0}
      on="hover"
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    , and residue mapping files
    <Popup
      content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
      disabled={false}
      offset={0}
      on="hover"
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    .
    <br />
    <br />
     Check out the
    <a
      href="http://evfold.org"
    >
       EVFold
    </a>
     or
    <a
      href="https://evcouplings.org/"
    >
       EVCouplings 
    </a>
     website to get these files.
  </Message>
  <Segment
    attached={true}
    raised={true}
  >
    <Grid
      centered={true}
      padded={true}
      relaxed={true}
    >
      <GridRow
        textAlign="right"
        verticalAlign="bottom"
      >
        <GridColumn
          style={
            Object {
              "height": "100%",
              "width": "auto",
            }
          }
        >
          <Button
            as="button"
            icon="trash"
            label={
              Object {
                "content": "Clean View",
              }
            }
            labelPosition="right"
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </GridColumn>
      </GridRow>
      <GridRow>
        <br />
      </GridRow>
      <GridRow
        columns={2}
        verticalAlign="bottom"
      >
        <GridColumn
          width={7}
        >
          <PredictedContactMap
            agreementColor="#ff0000"
            allColor="#000000"
            data={
              Object {
                "couplingScores": CouplingContainer {
                  "colCounter": 0,
                  "contacts": Array [],
                  "derivedFromCouplingScoresFlag": true,
                  "getCouplingScore": [Function],
                  "includes": [Function],
                  "indexRange": Object {
                    "max": 1,
                    "min": 1,
                  },
                  "rowCounter": 0,
                  "scoreSource": "cn",
                  "totalStoredContacts": 0,
                },
                "pdbData": Object {
                  "experimental": undefined,
                },
                "secondaryStructures": Array [],
              }
            }
            filters={Array []}
            height="100%"
            highlightColor="#ff8800"
            isDataLoading={false}
            observedColor="#0000ff"
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
            width="100%"
          />
        </GridColumn>
        <GridColumn
          width={7}
        >
          <Connect(NGLContainerClass)
            experimentalProteins={Array []}
            isDataLoading={false}
            measuredProximity="C-α"
            onMeasuredProximityChange={[Function]}
            predictedProteins={Array []}
          />
        </GridColumn>
      </GridRow>
    </Grid>
  </Segment>
  <footer
    style={
      Object {
        "padding": "25vh 0 25px 25px",
      }
    }
  >
    Powered by 
    <a
      href="https://github.com/cBioCenter/bioblocks-viz"
    >
      Bioblocks
    </a>
    !
  </footer>
</div>
`;

exports[`VisualizationPage Should match existing snapshot when using closest proximity. 1`] = `
<div
  id="BioblocksVizApp"
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": "1000px",
    }
  }
>
  <Modal
    centered={true}
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    closeOnEscape={true}
    closeOnPortalMouseLeave={true}
    dimmer={true}
    eventPool="Modal"
    onClose={[Function]}
    open={false}
    size="fullscreen"
  >
    <FolderUploadComponent
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "lightblue",
          "border": "7px dashed blue",
          "height": "90vmin",
          "textAlign": "center",
        }
      }
    />
  </Modal>
  <ErrorMessageComponent
    couplingScores={
      CouplingContainer {
        "colCounter": 0,
        "contacts": Array [],
        "derivedFromCouplingScoresFlag": true,
        "getCouplingScore": [Function],
        "includes": [Function],
        "indexRange": Object {
          "max": 1,
          "min": 1,
        },
        "rowCounter": 0,
        "scoreSource": "cn",
        "totalStoredContacts": 0,
      }
    }
    errorMsg=""
    mismatches={Array []}
  />
  <Message>
    To get started, please drag and drop onto the page either:
    <br />
    (1) An evcouplings results directory.
    <br />
    (2) Individual .pdb, coupling scores
    <Popup
      content="A file that ends as 'CouplingScores.csv'"
      disabled={false}
      offset={0}
      on="hover"
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    , and residue mapping files
    <Popup
      content="A .csv file that starts with 'residue_mapping' - or - A file that ends in .indextable / .indextableplus"
      disabled={false}
      offset={0}
      on="hover"
      pinned={false}
      position="top left"
      trigger={
        <a>
          (?)
        </a>
      }
    />
    .
    <br />
    <br />
     Check out the
    <a
      href="http://evfold.org"
    >
       EVFold
    </a>
     or
    <a
      href="https://evcouplings.org/"
    >
       EVCouplings 
    </a>
     website to get these files.
  </Message>
  <Segment
    attached={true}
    raised={true}
  >
    <Grid
      centered={true}
      padded={true}
      relaxed={true}
    >
      <GridRow
        textAlign="right"
        verticalAlign="bottom"
      >
        <GridColumn
          style={
            Object {
              "height": "100%",
              "width": "auto",
            }
          }
        >
          <Button
            as="button"
            icon="trash"
            label={
              Object {
                "content": "Clean View",
              }
            }
            labelPosition="right"
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </GridColumn>
      </GridRow>
      <GridRow>
        <br />
      </GridRow>
      <GridRow
        columns={2}
        verticalAlign="bottom"
      >
        <GridColumn
          width={7}
        >
          <PredictedContactMap
            agreementColor="#ff0000"
            allColor="#000000"
            data={
              Object {
                "couplingScores": CouplingContainer {
                  "colCounter": 0,
                  "contacts": Array [],
                  "derivedFromCouplingScoresFlag": true,
                  "getCouplingScore": [Function],
                  "includes": [Function],
                  "indexRange": Object {
                    "max": 1,
                    "min": 1,
                  },
                  "rowCounter": 0,
                  "scoreSource": "cn",
                  "totalStoredContacts": 0,
                },
                "pdbData": Object {
                  "experimental": undefined,
                },
                "secondaryStructures": Array [],
              }
            }
            filters={Array []}
            height="100%"
            highlightColor="#ff8800"
            isDataLoading={false}
            observedColor="#0000ff"
            style={
              Object {
                "backgroundColor": "#ffffff",
              }
            }
            width="100%"
          />
        </GridColumn>
        <GridColumn
          width={7}
        >
          <Connect(NGLContainerClass)
            experimentalProteins={Array []}
            isDataLoading={false}
            measuredProximity="CLOSEST ATOM"
            onMeasuredProximityChange={[Function]}
            predictedProteins={Array []}
          />
        </GridColumn>
      </GridRow>
    </Grid>
  </Segment>
  <footer
    style={
      Object {
        "padding": "25vh 0 25px 25px",
      }
    }
  >
    Powered by 
    <a
      href="https://github.com/cBioCenter/bioblocks-viz"
    >
      Bioblocks
    </a>
    !
  </footer>
</div>
`;
